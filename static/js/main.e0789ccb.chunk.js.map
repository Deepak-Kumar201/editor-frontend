{"version":3,"sources":["components/Splash Screen/SplashScreen.module.css","components/ThemeToggler/Themetoggler.module.css","components/Footer.js","reducer/ThemeReducer.js","reducer/context/Themeprovider.js","components/LeftContainer.js","components/RightContainer.js","components/SelectBar.js","components/Main.js","components/Popup.js","components/ThemeToggler/ThemeToggler.js","components/NavBar.js","components/Splash Screen/SplashScreen.js","App.js","index.js"],"names":["module","exports","Footer","className","ThemeReducer","prevTheme","type","payload","theme","ThemeContext","createContext","ThemeProvider","children","useReducer","setTheme","useEffect","currTheme","localStorage","getItem","setItem","Provider","value","useTheme","useContext","LeftContainer","pre","ext","updateOutput","updateLoading","useState","setCopied","code","setCode","input","setInput","fileinput","setFileInput","console","log","hiddenFileInput","useRef","onClick","event","current","click","title","src","process","alt","width","onChange","e","preventDefault","reader","FileReader","onload","ev","a","text","target","result","readAsText","files","style","display","ref","data","language","axios","post","then","res","output","search","catch","err","trigger","backgroundColor","border","onCopy","position","closeOnDocumentClick","keepTooltipInside","spellCheck","placeholder","defaultValue","default","RightContainer","loading","error","height","color","visible","SelectBar","changeLanguage","lang","setLang","handleClick","setAttribute","Main","setOutput","setError","intial","setLoading","status","updateError","PopUpText","modal","nested","close","href","ThemeToggler","togglerStyles","size","NavBar","id","Preloader","preload","logo","App","isLoading","setIsLoading","setTimeout","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,8BAA8B,KAAO,2BAA2B,aAAe,qC,mBCA3GD,EAAOC,QAAU,CAAC,cAAc,oC,qLCGjBC,EAFA,kBAAM,qBAAKC,UAAU,YCUrBC,EAZM,SAACC,EAAD,GAAmC,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvC,OAAQD,GACN,IAAK,eACH,OAAIC,EACKA,EAAQC,MAEI,UAAdH,EAAwB,OAAS,QAE1C,QACE,OAAOA,ICHPI,EAAeC,0BAERC,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC9B,EAA0BC,qBAAWT,EAAc,SAAnD,mBAAOI,EAAP,KAAcM,EAAd,KAaA,OAXAC,qBAAU,WACR,IAAMC,EAAYC,aAAaC,QAAQ,SACnCF,GACFF,EAAS,CAAER,KAAM,eAAgBC,QAAS,CAAEC,MAAOQ,OAEpD,IAEHD,qBAAU,WACRE,aAAaE,QAAQ,QAASX,MAM9B,aAFA,CAECC,EAAaW,SAAd,CAAuBC,MAAO,CAAEb,QAAOM,YAAvC,SACGF,KAQMU,EAAW,kBAAMC,qBAAWd,I,yDCoI1Be,EA9JO,SAAC,GAEhB,IADLC,EACI,EADJA,IAAKC,EACD,EADCA,IAAKC,EACN,EADMA,aAAcC,EACpB,EADoBA,cAExB,EAA4BC,oBAAS,GAArC,mBAAeC,GAAf,WACA,EAAwBD,mBAASJ,GAAjC,mBAAOM,EAAP,KAAaC,EAAb,KACA,EAA0BH,mBAAS,MAAnC,mBAAOI,EAAP,KAAcC,EAAd,KACA,EAAkCL,qBAAlC,mBAAOM,EAAP,KAAkBC,EAAlB,KACQ5B,EAAUc,IAAVd,MAaRO,qBAAU,WACRsB,QAAQC,IAAI,OAAQH,GACpBH,EAAQG,KACP,CAACA,IAEJ,IAAMI,EAAkBC,iBAAO,MAgC/B,OACE,sBAAKrC,UAAU,kBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,yCAEGuB,OAGL,gCACE,wBAAQvB,UAAU,MAAMG,KAAK,SAASmC,QAxC1B,SAACC,GACnBH,EAAgBI,QAAQC,SAuClB,SACE,qBACEC,MAAM,SACNC,IAAG,UAAKC,mBAAL,sBACHC,IAAI,cACJC,MAAM,WAGV,uBACE3C,KAAK,OACL4C,SApEO,SAACC,GAChBA,EAAEC,iBACF,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,OAAP,uCAAgB,WAAOC,GAAP,eAAAC,EAAA,sDACRC,EAAOF,EAAGG,OAAOC,OACvBxB,EAAasB,GAFC,2CAAhB,sDAKAL,EAAOQ,WAAWV,EAAEQ,OAAOG,MAAM,KA6DzBC,MAAO,CAAEC,QAAS,QAClBC,IAAK1B,IAGP,wBAAQpC,UAAU,MAAMG,KAAK,SAA7B,SACE,qBACEuC,MAAM,MACNC,IAAG,UAAKC,mBAAL,oBACHC,IAAI,cACJP,QAnDS,SAACU,GACpBA,EAAEC,iBACFxB,EAAc,QACd,IAAMsC,EAAO,CACXC,SAAUzC,EACVK,OACAE,SAGFmC,IACGC,KAAK,kDAAmDH,GACxDI,MAAK,SAACC,GAEL,OADA3C,EAAc,UACkC,IAA5C2C,EAAIL,KAAKN,OAAOY,OAAOC,OAAO,SACzB9C,EAAa4C,EAAK,SAEpB5C,EAAa4C,EAAK,eAE1BG,OAAM,SAACC,GAAD,OAAShD,EAAagD,EAAK,aAkC1B1B,MAAM,iBAKd,sBACE9C,UAAS,qBACG,UAAVK,EAAoB,wBAA0B,IAFlD,UAKE,sBAAKL,UAAU,oBAAf,UACE,oBAAIA,UAAU,kBAAd,oBACA,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CACEyE,QACE,wBACEtE,KAAK,SACLyD,MAAO,CAAEc,gBAAiB,aAAcC,OAAQ,QAFlD,SAIE,cAAC,kBAAD,CAAiBpB,KAAM3B,EAAMgD,OAAQ,kBAAMjD,GAAU,IAArD,SACE,qBACEmB,MAAM,OACNH,IAAG,UAAKC,mBAAL,oBACHC,IAAI,oBACJH,MAAM,kBAKdmC,SAAU,CAAC,aAAc,eAAgB,eACzCC,sBAAoB,EACpBC,kBAAkB,mBAlBpB,0BAwBJ,iCAEE,0BACE/E,UAAS,sBACG,UAAVK,EAAoB,yBAA2B,IAEjD2E,WAAW,QACXC,YAAY,sBACZlC,SAvGW,SAACC,GACpBnB,EAAQmB,EAAEQ,OAAOtC,QAuGTgE,aAAc5D,EACdJ,MAAOU,IAGT,0BACEqD,YAAY,sBACZD,WAAW,QACXjC,SA5GQ,SAACC,GACjBjB,EAASiB,EAAEQ,OAAOtC,QA4GVlB,UAAS,uBACG,UAAVK,EAAoB,0BAA4B,IAElD8E,QAASrD,c,iBC9FNsD,EArDQ,SAAC,GAEjB,IADLf,EACI,EADJA,OAAQgB,EACJ,EADIA,QAAS7D,EACb,EADaA,aAETnB,GADJ,EAD2BiF,MAEbnE,IAAVd,OAER,OACE,sBAAKL,UAAU,mBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SACE,qDAEF,8BACE,wBACEA,UAAU,MACVG,KAAK,SACLmC,QAAS,kBAAMd,EAAa,kBAAmB,UAHjD,SAKE,qBACEkB,MAAM,iBACNG,IAAI,iBACJF,IAAG,UAAKC,mBAAL,mCAKX,sBACE5C,UAAS,6BACG,UAAVK,EAAoB,gCAAkC,IAF1D,UAKE,qBACEL,UAAS,iBAAsB,UAAVK,EAAoB,oBAAsB,IADjE,SAGGgE,IAEH,cAAC,IAAD,CACErE,UAAU,SACV8C,MAAM,MACNyC,OAAO,MACPpF,KAAK,QACLqF,MAAM,aACNC,QAASJ,WCwBJK,G,MAnEG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACnB,EAAwBjE,mBAAS,OAAjC,mBAAOkE,EAAP,KAAaC,EAAb,KACMC,EAAc,SAAC9C,EAAG9B,GACtB,OAAQA,GACN,IAAK,MACH8B,EAAEQ,OAAOuC,aACP,MADF,UAEKnD,mBAFL,yBAIAiD,EAAQ,OACR,MACF,IAAK,OACH7C,EAAEQ,OAAOuC,aACP,MADF,UAEKnD,mBAFL,4BAIAiD,EAAQ,QACR,MACF,IAAK,KACH7C,EAAEQ,OAAOuC,aACP,MADF,UAEKnD,mBAFL,0BAIAiD,EAAQ,MAIZF,EAAezE,IAEjB,OACE,sBAAKlB,UAAU,cAAf,UACE,qBACE2C,IACE,UACOC,mBADE,QAATgD,EAAA,iDAIF/C,IAAI,MACJC,MAAM,OACNR,QAAS,SAACU,GAAD,OAAO8C,EAAY9C,EAAG,UAEjC,qBACEL,IACE,UACOC,mBADE,SAATgD,EAAA,uDAIF/C,IAAI,KACJC,MAAM,OACNR,QAAS,SAACU,GAAD,OAAO8C,EAAY9C,EAAG,WAEjC,qBACEL,IACE,UACOC,mBADE,OAATgD,EAAA,mDAIF/C,IAAI,SACJC,MAAM,OACNR,QAAS,SAACU,GAAD,OAAO8C,EAAY9C,EAAG,cCAxBgD,EAxDF,WACX,MAA4BtE,mBAAS,IAArC,mBAAO2C,EAAP,KAAe4B,EAAf,KACA,EAAwBvE,mBAAS,OAAjC,mBAAOkE,EAAP,KAAaC,EAAb,KACA,EAA0BnE,oBAAS,GAAnC,mBAAO4D,EAAP,KAAcY,EAAd,KACA,EAA4BxE,mBAAS,IAArC,mBAAOyE,EAAP,KACA,GADA,KAC8BzE,mBAAS,UAAvC,mBAAO2D,EAAP,KAAgBe,EAAhB,KACQ/F,EAAUc,IAAVd,MAEFmB,EAAe,SAAC4C,EAAKjE,GACZ,UAATA,EACF8F,EAAU,mBACQ,UAAT9F,GACT+F,GAAS,GACTD,EAAU7B,EAAIL,KAAKN,OAAOY,SAE1B4B,EAAU7B,EAAIL,KAAKN,OAAOY,SAc9B,OACE,sBACErE,UAAS,0BACG,UAAVK,EAAoB,6BAA+B,IAFvD,UAKE,cAAC,EAAD,CAAWsF,eAVQ,SAACzE,GACtB2E,EAAQ3E,MAUN,sBAAKlB,UAAU,gBAAf,UACE,cAAC,EAAD,CACEuB,IAAKqE,EACLtE,IAAK6E,EACL3E,aAAcA,EACdC,cAnBc,SAAC4E,GACrBD,EAAWC,IAmBLC,YAvBY,SAACpF,GACnBgF,EAAShF,IAuBHmE,QAASA,IAEX,cAAC,EAAD,CACEhB,OAAQA,EACRgB,QAASA,EACT7D,aAAcA,EACd8D,MAAOA,WC8BFiB,G,YAjFG,kBAChB,cAAC,IAAD,CACE9B,QACE,qBACE9B,IAAG,UAAKC,mBAAL,oBACHC,IAAI,OACJH,MAAM,SAGV8D,OAAK,EACLC,QAAM,EATR,SAWG,SAACC,GAAD,OACC,sBAAK1G,UAAU,QAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,SAAf,4BACA,wBAAQA,UAAU,QAAQsC,QAASoE,EAAOvG,KAAK,SAA/C,qBAIF,sBAAKH,UAAU,UAAf,UACG,IACD,2DACA,wFAEE,wCACA,qCAHF,MAKE,wCAEF,2CAEE,oDAFF,wFAKE,uCALF,kCAOE,6CAGJ,qBAAKA,UAAU,UAAf,SACE,wBACEG,KAAK,SACLH,UAAU,SACVsC,QAAS,WACPoE,KAJJ,SAOE,mBAAGC,KAAK,iDAAR,SACE,qBACEhE,IAAG,UAAKC,mBAAL,sBACHF,MAAM,0BACNG,IAAI,8B,yBCvCL+D,EAbM,WACnB,MAA4BzF,IAApBd,EAAR,EAAQA,MAAOM,EAAf,EAAeA,SACf,OACE,wBACER,KAAK,SACLH,UAAS,UAAK6G,IAAc,gBAC5BvE,QAAS,kBAAM3B,EAAS,CAAER,KAAM,kBAHlC,SAKa,SAAVE,EAAmB,cAAC,IAAD,CAAOyG,KAAM,KAAS,cAAC,IAAD,CAAQA,KAAM,QCe/CC,EAxBA,kBACb,sBAAK/G,UAAU,WAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBACE2C,IAAG,UAAKC,mBAAL,yBACHC,IAAI,YACJC,MAAM,SAER,mBAAGkE,GAAG,aAAN,gCAEF,sBAAKhH,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,mBAAG2G,KAAK,iDAAR,SACE,qBACEhE,IAAG,UAAKC,mBAAL,sBACHF,MAAM,0BACNG,IAAI,kBAGR,cAAC,EAAD,W,0CCNSoE,EAbG,kBAChB,sBAAKjH,UAAWkH,IAAQA,QAAxB,UACE,qBACElH,UAAWkH,IAAQC,KACnBxE,IAAG,UAAKC,mBAAL,yBACHC,IAAI,GACJ0C,OAAO,WAET,uBACA,cAAC,IAAD,CAAiBuB,KAAK,WCyBXM,EA/BH,WAEV,MAAkC1F,oBAAS,GAA3C,mBAAO2F,EAAP,KAAkBC,EAAlB,KASA,OAPA1G,qBAAU,WAER2G,YAAW,WACTD,GAAa,KACZ,OACF,IAEID,EAEL,cAAC,EAAD,IAEA,sBAAKrH,UAAU,MAAf,UAGE,cAAC,EAAD,IAIA,cAAC,EAAD,IAIA,cAAC,EAAD,QC3BNwH,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.e0789ccb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preload\":\"SplashScreen_preload__3prVC\",\"logo\":\"SplashScreen_logo__2Vz-1\",\"preload_logo\":\"SplashScreen_preload_logo__1Qlwn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toggler-btn\":\"Themetoggler_toggler-btn__3yGKK\"};","import React from 'react';\n\nconst Footer = () => <div className=\"footer\" />;\n\nexport default Footer;\n","const ThemeReducer = (prevTheme, { type, payload }) => {\n  switch (type) {\n    case 'TOGGLE_THEME':\n      if (payload) {\n        return payload.theme;\n      }\n      return prevTheme === 'light' ? 'dark' : 'light';\n\n    default:\n      return prevTheme;\n  }\n};\nexport default ThemeReducer;\n","import React, {\n  createContext, useContext, useEffect, useReducer,\n} from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeReducer from '../ThemeReducer';\n\nconst ThemeContext = createContext();\n// eslint disable-next-line\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useReducer(ThemeReducer, 'light');\n\n  useEffect(() => {\n    const currTheme = localStorage.getItem('theme');\n    if (currTheme) {\n      setTheme({ type: 'TOGGLE_THEME', payload: { theme: currTheme } });\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('theme', theme);\n  });\n\n  return (\n    /* eslint-disable */\n    // eslint disable-next-line jsx-no-constructed-context-values\n    <ThemeContext.Provider value={{ theme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n    /* eslint-enable */\n  );\n};\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\nexport const useTheme = () => useContext(ThemeContext);\n","/* eslint no-unused-vars: 0 */\r\nimport axios from 'axios';\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport Popup from 'reactjs-popup';\r\nimport PropTypes from 'prop-types';\r\nimport { useTheme } from '../reducer/context/Themeprovider';\r\n\r\nconst LeftContainer = ({\r\n  pre, ext, updateOutput, updateLoading,\r\n}) => {\r\n  const [copied, setCopied] = useState(false);\r\n  const [code, setCode] = useState(pre);\r\n  const [input, setInput] = useState(null);\r\n  const [fileinput, setFileInput] = useState();\r\n  const { theme } = useTheme();\r\n\r\n  const showFile = (e) => {\r\n    e.preventDefault();\r\n    const reader = new FileReader();\r\n    reader.onload = async (ev) => {\r\n      const text = ev.target.result;\r\n      setFileInput(text);\r\n    };\r\n\r\n    reader.readAsText(e.target.files[0]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('File', fileinput);\r\n    setCode(fileinput);\r\n  }, [fileinput]);\r\n\r\n  const hiddenFileInput = useRef(null);\r\n\r\n  const handleClick = (event) => {\r\n    hiddenFileInput.current.click();\r\n  };\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n  };\r\n  const takeInput = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateLoading('true');\r\n    const data = {\r\n      language: ext,\r\n      code,\r\n      input,\r\n    };\r\n\r\n    axios\r\n      .post('https://editor-backend-v1.herokuapp.com/compile', data)\r\n      .then((res) => {\r\n        updateLoading('false');\r\n        if (res.data.result.output.search('error') !== -1) {\r\n          return updateOutput(res, 'error');\r\n        }\r\n        return updateOutput(res, 'response');\r\n      })\r\n      .catch((err) => updateOutput(err, 'error'));\r\n  };\r\n\r\n  return (\r\n    <div className=\"left__container\">\r\n      <div className=\"header__info\">\r\n        <div className=\"file__name\">\r\n          <span>\r\n            code.\r\n            {ext}\r\n          </span>\r\n        </div>\r\n        <div>\r\n          <button className=\"btn\" type=\"button\" onClick={handleClick}>\r\n            <img\r\n              title=\"Upload\"\r\n              src={`${process.env.PUBLIC_URL}/assets/upload.png`}\r\n              alt=\"Upload Code\"\r\n              width=\"16px\"\r\n            />\r\n          </button>\r\n          <input\r\n            type=\"file\"\r\n            onChange={showFile}\r\n            style={{ display: 'none' }}\r\n            ref={hiddenFileInput}\r\n          />\r\n          {/* Button for download & Submit */}\r\n          <button className=\"btn\" type=\"button\">\r\n            <img\r\n              title=\"Run\"\r\n              src={`${process.env.PUBLIC_URL}/assets/play.png`}\r\n              alt=\"Submit Code\"\r\n              onClick={handleSubmit}\r\n              width=\"18px\"\r\n            />\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div\r\n        className={`code__body ${\r\n          theme === 'light' ? 'code__body_light-mode' : ''\r\n        }`}\r\n      >\r\n        <div className=\"logger__head_left\">\r\n          <h3 className=\"logger__heading\">Editor</h3>\r\n          <div className=\"tooltipBoundary\">\r\n            <Popup\r\n              trigger={(\r\n                <button\r\n                  type=\"button\"\r\n                  style={{ backgroundColor: 'blueviolet', border: 'none' }}\r\n                >\r\n                  <CopyToClipboard text={code} onCopy={() => setCopied(true)}>\r\n                    <img\r\n                      width=\"24px\"\r\n                      src={`${process.env.PUBLIC_URL}/assets/copy.png`}\r\n                      alt=\"Copy to ClipBoard\"\r\n                      title=\"Copy Code\"\r\n                    />\r\n                  </CopyToClipboard>\r\n                </button>\r\n              )}\r\n              position={['top center', 'bottom right', 'bottom left']}\r\n              closeOnDocumentClick\r\n              keepTooltipInside=\".tooltipBoundary\"\r\n            >\r\n              Copied!\r\n            </Popup>\r\n          </div>\r\n        </div>\r\n        <form>\r\n          {/* textarea for codeblock */}\r\n          <textarea\r\n            className={`code__block ${\r\n              theme === 'light' ? 'code__block_light-mode' : ''\r\n            }`}\r\n            spellCheck=\"false\"\r\n            placeholder=\"Input the Code Here\"\r\n            onChange={handleChange}\r\n            defaultValue={pre}\r\n            value={code}\r\n          />\r\n          {/* textarea for Input Data */}\r\n          <textarea\r\n            placeholder=\"Input the Data Here\"\r\n            spellCheck=\"false\"\r\n            onChange={takeInput}\r\n            className={`input__block ${\r\n              theme === 'light' ? 'input__block_light-mode' : ''\r\n            }`}\r\n            default={input}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nLeftContainer.propTypes = {\r\n  pre: PropTypes.string.isRequired,\r\n  ext: PropTypes.string.isRequired,\r\n  updateOutput: PropTypes.func.isRequired,\r\n  updateLoading: PropTypes.func.isRequired,\r\n};\r\nexport default LeftContainer;\r\n","/* eslint no-unused-vars: 0 */\nimport React from 'react';\nimport Loader from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\nimport { useTheme } from '../reducer/context/Themeprovider';\n\nconst RightContainer = ({\n  output, loading, updateOutput, error,\n}) => {\n  const { theme } = useTheme();\n\n  return (\n    <div className=\"right__container\">\n      <div className=\"header__info\">\n        <div className=\"file__name\">\n          <span>Output Terminal</span>\n        </div>\n        <div>\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={() => updateOutput('Console Cleared', 'clear')}\n          >\n            <img\n              title=\"Clear Terminal\"\n              alt=\"Clear Terminal\"\n              src={`${process.env.PUBLIC_URL}/assets/clear-icon.png`}\n            />\n          </button>\n        </div>\n      </div>\n      <div\n        className={`logger__head_right ${\n          theme === 'light' ? 'logger__head_right_light-mode' : ''\n        }`}\n      >\n        <div\n          className={`output ${theme === 'light' ? 'output_light-mode' : ''}`}\n        >\n          {output}\n        </div>\n        <Loader\n          className=\"loader\"\n          width=\"100\"\n          height=\"100\"\n          type=\"Rings\"\n          color=\"blueviolet\"\n          visible={loading}\n        />\n      </div>\n    </div>\n  );\n};\nRightContainer.propTypes = {\n  output: PropTypes.string.isRequired,\n  loading: PropTypes.bool.isRequired,\n  updateOutput: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n};\nexport default RightContainer;\n","import React, { useState } from 'react';\nimport './Main.css';\nimport PropTypes from 'prop-types';\n\nconst SelectBar = ({ changeLanguage }) => {\n  const [lang, setLang] = useState('cpp');\n  const handleClick = (e, value) => {\n    switch (value) {\n      case 'cpp':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/c-active.png`,\n        );\n        setLang('cpp');\n        break;\n      case 'java':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/java-active.png`,\n        );\n        setLang('java');\n        break;\n      case 'py':\n        e.target.setAttribute(\n          'src',\n          `${process.env.PUBLIC_URL}/assets/py-active.png`,\n        );\n        setLang('py');\n        break;\n      default:\n    }\n    changeLanguage(value);\n  };\n  return (\n    <div className=\"select__bar\">\n      <img\n        src={\n          lang === 'cpp'\n            ? `${process.env.PUBLIC_URL}/assets/c-active.png`\n            : `${process.env.PUBLIC_URL}/assets/c-inactive.png`\n        }\n        alt=\"C++\"\n        width=\"60px\"\n        onClick={(e) => handleClick(e, 'cpp')}\n      />\n      <img\n        src={\n          lang === 'java'\n            ? `${process.env.PUBLIC_URL}/assets/java-active.png`\n            : `${process.env.PUBLIC_URL}/assets/java-inactive.png`\n        }\n        alt=\"JS\"\n        width=\"60px\"\n        onClick={(e) => handleClick(e, 'java')}\n      />\n      <img\n        src={\n          lang === 'py'\n            ? `${process.env.PUBLIC_URL}/assets/py-active.png`\n            : `${process.env.PUBLIC_URL}/assets/py-inactive.png`\n        }\n        alt=\"Python\"\n        width=\"60px\"\n        onClick={(e) => handleClick(e, 'py')}\n      />\n    </div>\n  );\n};\nSelectBar.propTypes = {\n  changeLanguage: PropTypes.func.isRequired,\n};\nexport default SelectBar;\n","/* eslint no-unused-vars: 0 */\nimport React, { useState } from 'react';\nimport { useTheme } from '../reducer/context/Themeprovider';\nimport LeftContainer from './LeftContainer';\nimport RightContainer from './RightContainer';\nimport SelectBar from './SelectBar';\n\nconst Main = () => {\n  const [output, setOutput] = useState('');\n  const [lang, setLang] = useState('cpp');\n  const [error, setError] = useState(false);\n  const [intial, setIntial] = useState('');\n  const [loading, setLoading] = useState('false');\n  const { theme } = useTheme();\n\n  const updateOutput = (res, type) => {\n    if (type === 'clear') {\n      setOutput('Console Cleared');\n    } else if (type === 'error') {\n      setError(true);\n      setOutput(res.data.result.output);\n    } else {\n      setOutput(res.data.result.output);\n    }\n  };\n\n  const updateError = (value) => {\n    setError(value);\n  };\n  const updateLoading = (status) => {\n    setLoading(status);\n  };\n  const changeLanguage = (value) => {\n    setLang(value);\n  };\n\n  return (\n    <div\n      className={`main__container ${\n        theme === 'light' ? 'main__container_light-mode' : ''\n      }`}\n    >\n      <SelectBar changeLanguage={changeLanguage} />\n      <div className=\"content__area\">\n        <LeftContainer\n          ext={lang}\n          pre={intial}\n          updateOutput={updateOutput}\n          updateLoading={updateLoading}\n          updateError={updateError}\n          loading={loading}\n        />\n        <RightContainer\n          output={output}\n          loading={loading}\n          updateOutput={updateOutput}\n          error={error}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport './Popup.css';\r\n\r\nconst PopUpText = () => (\r\n  <Popup\r\n    trigger={(\r\n      <img\r\n        src={`${process.env.PUBLIC_URL}/assets/info.png`}\r\n        alt=\"Info\"\r\n        title=\"Info\"\r\n      />\r\n    )}\r\n    modal\r\n    nested\r\n  >\r\n    {(close) => (\r\n      <div className=\"modal\">\r\n        <div className=\"modal__header\">\r\n          <div className=\"header\"> Info Section </div>\r\n          <button className=\"close\" onClick={close} type=\"button\">\r\n            &times;\r\n          </button>\r\n        </div>\r\n        <div className=\"content\">\r\n          {' '}\r\n          <p>Welcome to Online Compiler</p>\r\n          <p>\r\n            As, if now the compiler has support for three languages\r\n            <b> Python</b>\r\n            <b>,C++</b>\r\n            and\r\n            <b>Java</b>\r\n          </p>\r\n          <p>\r\n            This is an\r\n            <b>open-source project</b>\r\n            and contributions are appreciated. If interested or you have any\r\n            suggestion click the\r\n            <b>GitHub</b>\r\n            icon at the bottom and raise an\r\n            <b>issue.</b>\r\n          </p>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"button\"\r\n            onClick={() => {\r\n              close();\r\n            }}\r\n          >\r\n            <a href=\"https://github.com/NegiAkash890/editor-backend\">\r\n              <img\r\n                src={`${process.env.PUBLIC_URL}/assets/github.png`}\r\n                title=\"Go to GitHub Repository\"\r\n                alt=\"GitHub Icon\"\r\n              />\r\n            </a>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )}\r\n  </Popup>\r\n);\r\n\r\nexport const BoundedTooltip = () => (\r\n  <div\r\n    style={{ height: 200, width: 400, border: '1px solid red' }}\r\n    className=\"tooltipBoundary\"\r\n  >\r\n    <Popup\r\n      trigger={(\r\n        <button type=\"button\" className=\"button\">\r\n          Trigger 1\r\n        </button>\r\n      )}\r\n      position=\"bottom right\"\r\n      closeOnDocumentClick\r\n      keepTooltipInside=\".tooltipBoundary\"\r\n    >\r\n      Code Copied\r\n    </Popup>\r\n  </div>\r\n);\r\nexport default PopUpText;\r\n","import React from 'react';\nimport { FiSun, FiMoon } from 'react-icons/fi';\nimport { useTheme } from '../../reducer/context/Themeprovider';\nimport togglerStyles from './Themetoggler.module.css';\n\nconst ThemeToggler = () => {\n  const { theme, setTheme } = useTheme();\n  return (\n    <button\n      type=\"button\"\n      className={`${togglerStyles['toggler-btn']}`}\n      onClick={() => setTheme({ type: 'TOGGLE_THEME' })}\n    >\n      {theme === 'dark' ? <FiSun size={20} /> : <FiMoon size={20} />}\n    </button>\n  );\n};\n\nexport default ThemeToggler;\n","import React from 'react';\nimport PopupText from './Popup';\nimport ThemeToggler from './ThemeToggler/ThemeToggler';\n\nconst NavBar = () => (\n  <div className=\"top__nav\">\n    <div className=\"logo__info\">\n      <img\n        src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n        alt=\"site logo\"\n        width=\"50px\"\n      />\n      <p id=\"logo__name\">Online Compiler</p>\n    </div>\n    <div className=\"info__section\">\n      <ThemeToggler />\n      <a href=\"https://github.com/NegiAkash890/editor-backend\">\n        <img\n          src={`${process.env.PUBLIC_URL}/assets/github.png`}\n          title=\"Go to GitHub Repository\"\n          alt=\"GitHub Icon\"\n        />\n      </a>\n      <PopupText />\n    </div>\n  </div>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport PropagateLoader from 'react-spinners/PropagateLoader';\nimport preload from './SplashScreen.module.css';\n\nconst Preloader = () => (\n  <div className={preload.preload}>\n    <img\n      className={preload.logo}\n      src={`${process.env.PUBLIC_URL}/assets/main-logo.png`}\n      alt=\"\"\n      height=\"150rem\"\n    />\n    <br />\n    <PropagateLoader size=\"20\" />\n  </div>\n);\n\nexport default Preloader;\n","import React, { useState, useEffect } from 'react';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\nimport NavBar from './components/NavBar';\nimport './App.css';\nimport Preloader from './components/Splash Screen/SplashScreen';\n\nconst App = () => {\n  // Loading state\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    // Wait for 3 seconds\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 3000);\n  }, []);\n\n  return isLoading ? (\n    // If page is still loading then splash screen\n    <Preloader />\n  ) : (\n    <div className=\"App\">\n      {/* Landing Navigation Bar */}\n\n      <NavBar />\n\n      {/* Main Container */}\n\n      <Main />\n\n      {/* Footer Container */}\n\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { ThemeProvider } from './reducer/context/Themeprovider';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}